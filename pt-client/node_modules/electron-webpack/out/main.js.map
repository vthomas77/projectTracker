{"version":3,"sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { readJson } from \"fs-extra-p\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { getConfig, validateConfig } from \"read-config-file\"\nimport { deepAssign } from \"read-config-file/out/deepAssign\"\nimport \"source-map-support/register\"\nimport { Configuration, Plugin, RuleSetRule } from \"webpack\"\nimport merge from \"webpack-merge\"\nimport { configureTypescript } from \"./configurators/ts\"\nimport { configureVue } from \"./configurators/vue/vue\"\nimport { ConfigurationEnv, ConfigurationType, ElectronWebpackConfiguration, PackageMetadata, PartConfiguration } from \"./core\"\nimport { BaseTarget } from \"./targets/BaseTarget\"\nimport { MainTarget } from \"./targets/MainTarget\"\nimport { BaseRendererTarget, RendererTarget } from \"./targets/RendererTarget\"\nimport { getFirstExistingFile, orNullIfFileNotExist } from \"./util\"\n\nexport { ElectronWebpackConfiguration } from \"./core\"\n\nconst _debug = require(\"debug\")\n\n// noinspection JSUnusedGlobalSymbols\nexport function getAppConfiguration(env: ConfigurationEnv) {\n  return BluebirdPromise.filter([configure(\"main\", env), configure(\"renderer\", env)], it => it != null)\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport function getMainConfiguration(env: ConfigurationEnv) {\n  return configure(\"main\", env)\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport function getRendererConfiguration(env: ConfigurationEnv) {\n  return configure(\"renderer\", env)\n}\n\n// in the future, if need, isRenderer = true arg can be added\n// noinspection JSUnusedGlobalSymbols\nexport function getDllConfiguration(env: ConfigurationEnv) {\n  return configure(\"renderer-dll\", env)\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport async function getTestConfiguration(env: ConfigurationEnv) {\n  const configurator = await createConfigurator(\"test\", env)\n  return await configurator.configure({\n    testComponents: path.join(process.cwd(), \"src/renderer/components/testComponents.ts\"),\n  })\n}\n\nexport class WebpackConfigurator {\n  readonly projectDir: string\n\n  private electronVersionPromise = new Lazy(() => getInstalledElectronVersion(this.projectDir))\n\n  readonly isRenderer: boolean\n  readonly isProduction: boolean\n  readonly isTest = this.type === \"test\"\n\n  readonly sourceDir: string\n  readonly commonSourceDirectory: string\n\n  readonly debug = _debug(`electron-webpack:${this.type}`)\n\n  private _configuration: Configuration | null = null\n\n  get config(): Configuration {\n    return this._configuration!!\n  }\n\n  readonly rules: Array<RuleSetRule> = []\n  readonly plugins: Array<Plugin> = []\n\n  // js must be first - e.g. iview has two files loading-bar.js and loading-bar.vue - when we require \"loading-bar\", js file must be resolved and not vue\n  readonly extensions: Array<string> = [\".js\", \".json\", \".node\"]\n\n  private _electronVersion: string | null = null\n\n  get electronVersion(): string {\n    return this._electronVersion!!\n  }\n\n  readonly entryFiles: Array<string> = []\n\n  constructor(readonly type: ConfigurationType, readonly env: ConfigurationEnv, readonly electronWebpackConfiguration: ElectronWebpackConfiguration, readonly metadata: PackageMetadata) {\n    if (electronWebpackConfiguration.renderer === undefined) {\n      electronWebpackConfiguration.renderer = {}\n    }\n    if (electronWebpackConfiguration.main === undefined) {\n      electronWebpackConfiguration.main = {}\n    }\n\n    if (metadata.dependencies == null) {\n      metadata.dependencies = {}\n    }\n    if (metadata.devDependencies == null) {\n      metadata.devDependencies = {}\n    }\n\n    this.projectDir = electronWebpackConfiguration.projectDir || process.cwd()\n    this.isRenderer = type.startsWith(\"renderer\")\n    process.env.BABEL_ENV = type\n\n    this.isProduction = this.env.production == null ? process.env.NODE_ENV === \"production\" : this.env.production\n\n    this.debug(`isProduction: ${this.isProduction}`)\n\n    this.sourceDir = this.getSourceDirectory(this.type)!!\n\n    const commonSourceDirectory = this.electronWebpackConfiguration.commonSourceDirectory\n    this.commonSourceDirectory = commonSourceDirectory == null ? path.join(this.projectDir, \"src\", \"common\") : path.resolve(this.projectDir, commonSourceDirectory)\n  }\n\n  /**\n   * Returns null if code processing for type is disabled.\n   */\n  getSourceDirectory(type: ConfigurationType): string | null {\n    const part = this.getPartConfiguration(type)\n    if (part === null || (part != null && part.sourceDirectory === null)) {\n      // part or sourceDirectory is explicitly set to null\n      return null\n    }\n\n    const result = part == null ? null : part.sourceDirectory\n    if (result == null) {\n      return path.join(this.projectDir, \"src\", type.startsWith(\"renderer\") || type === \"test\" ? \"renderer\" : type)\n    }\n    else {\n      return path.resolve(this.projectDir, result)\n    }\n  }\n\n  getPartConfiguration(type: ConfigurationType): PartConfiguration | null | undefined {\n    if (type === \"main\") {\n      return this.electronWebpackConfiguration.main\n    }\n    else {\n      return this.electronWebpackConfiguration.renderer\n    }\n  }\n\n  get commonDistDirectory() {\n    return path.join(this.projectDir, \"dist\")\n  }\n\n  hasDependency(name: string) {\n    return name in this.metadata.dependencies || this.hasDevDependency(name)\n  }\n\n  hasDevDependency(name: string) {\n    return name in this.metadata.devDependencies\n  }\n\n  /**\n   * Returns the names of devDependencies that match a given string or regex.\n   * If no matching dependencies are found, an empty array is returned.\n   *\n   * @return list of matching dependency names, e.g. `['babel-preset-react', 'babel-preset-stage-0']`\n   */\n  getMatchingDevDependencies(options: GetMatchingDevDependenciesOptions = {}) {\n    const includes = options.includes || []\n    const excludes = new Set(options.excludes || [])\n    return Object.keys(this.metadata.devDependencies)\n      .filter(name => !excludes.has(name) && includes.some(prefix => name.startsWith(prefix)))\n  }\n\n  async configure(entry?: { [key: string]: any } | null) {\n    this._configuration = {\n      context: this.projectDir,\n      devtool: this.isProduction || this.isTest ? \"nosources-source-map\" : \"eval-source-map\",\n      externals: this.computeExternals(),\n      node: {\n        __dirname: !this.isProduction,\n        __filename: !this.isProduction,\n      },\n      output: {\n        filename: \"[name].js\",\n        chunkFilename: \"[name].bundle.js\",\n        libraryTarget: \"commonjs2\",\n        path: path.join(this.commonDistDirectory, this.type)\n      },\n      target: this.isTest ? \"node\" : `electron-${this.type === \"renderer-dll\" ? \"renderer\" : this.type}` as any,\n      resolve: {\n        alias: {\n          \"@\": this.sourceDir,\n          common: this.commonSourceDirectory,\n        },\n        extensions: this.extensions,\n      },\n      module: {\n        rules: this.rules,\n      },\n      plugins: this.plugins,\n    }\n\n    if (entry != null) {\n      this._configuration.entry = entry\n    }\n\n    // if electronVersion not specified, use latest\n    this._electronVersion = this.electronWebpackConfiguration.electronVersion || await this.electronVersionPromise.value || \"1.8.2\"\n    const target = (() => {\n      switch (this.type) {\n        case \"renderer\": return new RendererTarget()\n        case \"renderer-dll\": return new BaseRendererTarget()\n        case \"test\": return new BaseRendererTarget()\n        case \"main\": return new MainTarget()\n        default: return new BaseTarget()\n      }\n    })()\n    this.debug(`Target class: ${target.constructor.name}`)\n    target.configureRules(this)\n    await Promise.all([target.configurePlugins(this), configureTypescript(this)])\n    configureVue(this)\n\n    if (this.debug.enabled) {\n      this.debug(`\\n\\n${this.type} config:` + JSON.stringify(this._configuration, null, 2) + \"\\n\\n\")\n    }\n\n    if (this.config.entry == null) {\n      this.entryFiles.push((await computeEntryFile(this.sourceDir, this.projectDir))!!)\n      this.config.entry = {\n        [this.type]: this.entryFiles,\n      }\n\n      const mainConfiguration = this.electronWebpackConfiguration.main || {}\n      let extraEntries = mainConfiguration.extraEntries\n      if (this.type === \"main\" && extraEntries != null) {\n        if (typeof extraEntries === \"string\") {\n          extraEntries = [extraEntries]\n        }\n\n        if (Array.isArray(extraEntries)) {\n          for (const p of extraEntries) {\n            this.config.entry[path.basename(p, path.extname(p))] = p\n          }\n        }\n        else {\n          Object.assign(this.config.entry, extraEntries)\n        }\n      }\n    }\n\n    this.applyCustomModifications()\n\n    return this.config\n  }\n\n  private applyCustomModifications() {\n    if (this.type === \"renderer\" && this.electronWebpackConfiguration.renderer && this.electronWebpackConfiguration.renderer.webpackConfig) {\n      this._configuration = merge.smart(this._configuration as any, require(path.join(this.projectDir, this.electronWebpackConfiguration.renderer.webpackConfig))) as any\n    }\n\n    if (this.type === \"renderer-dll\" && this.electronWebpackConfiguration.renderer && this.electronWebpackConfiguration.renderer.webpackDllConfig) {\n      this._configuration = merge.smart(this._configuration as any, require(path.join(this.projectDir, this.electronWebpackConfiguration.renderer.webpackDllConfig))) as any\n    }\n\n    if (this.type === \"main\" && this.electronWebpackConfiguration.main && this.electronWebpackConfiguration.main.webpackConfig) {\n      this._configuration = merge.smart(this._configuration as any, require(path.join(this.projectDir, this.electronWebpackConfiguration.main.webpackConfig))) as any\n    }\n  }\n\n  private computeExternals() {\n    const whiteListedModules = new Set(this.electronWebpackConfiguration.whiteListedModules || [])\n    if (this.isRenderer) {\n      whiteListedModules.add(\"vue\")\n    }\n\n    const filter = (name: string) => !name.startsWith(\"@types/\") && (whiteListedModules == null || !whiteListedModules.has(name))\n    const externals: Array<string> = Object.keys(this.metadata.dependencies).filter(filter)\n    externals.push(\"electron\")\n    externals.push(\"webpack\")\n    // because electron-devtools-installer specified in the devDependencies, but required in the index.dev\n    externals.push(\"electron-devtools-installer\")\n    if (this.type === \"main\") {\n      externals.push(\"webpack/hot/log-apply-result\")\n      externals.push(\"electron-webpack/out/electron-main-hmr/HmrClient\")\n      externals.push(\"source-map-support/source-map-support.js\")\n    }\n\n    if (this.electronWebpackConfiguration.externals != null) {\n      return externals.concat(this.electronWebpackConfiguration.externals)\n    }\n\n    return externals\n  }\n}\n\nconst schemeDataPromise = new Lazy(() => readJson(path.join(__dirname, \"..\", \"scheme.json\")))\n\nexport async function createConfigurator(type: ConfigurationType, env: ConfigurationEnv | null) {\n  if (env != null) {\n    // allow to pass as `--env.autoClean=false` webpack arg\n    const _env: any = env\n    for (const name of [\"minify\", \"autoClean\", \"production\"]) {\n      if (_env[name] === \"true\") {\n        _env[name] = true\n      }\n      else if (_env[name] === \"false\") {\n        _env[name] = false\n      }\n    }\n  }\n\n  if (env == null) {\n     env = {}\n   }\n\n  const projectDir = (env.configuration || {}).projectDir || process.cwd()\n  const packageMetadata = await orNullIfFileNotExist(readJson(path.join(projectDir, \"package.json\")))\n  const electronWebpackConfig = ((await getConfig({\n    packageKey: \"electronWebpack\",\n    configFilename: \"electron-webpack\",\n    projectDir,\n    packageMetadata: new Lazy(() => Promise.resolve(packageMetadata))\n  })) || {} as any).result || {}\n  if (env.configuration != null) {\n    deepAssign(electronWebpackConfig, env.configuration)\n  }\n\n  await validateConfig(electronWebpackConfig, schemeDataPromise, message => {\n    return `${message}\n\nHow to fix:\n1. Open https://webpack.electron.build/options\n2. Search the option name on the page.\n  * Not found? The option was deprecated or not exists (check spelling).\n  * Found? Check that the option in the appropriate place. e.g. \"sourceDirectory\" only in the \"main\" or \"renderer\", not in the root.\n`\n  })\n  return new WebpackConfigurator(type, env, electronWebpackConfig, packageMetadata)\n}\n\nexport async function configure(type: ConfigurationType, env: ConfigurationEnv | null): Promise<Configuration | null> {\n  const configurator = await createConfigurator(type, env)\n  const sourceDir = configurator.sourceDir\n  // explicitly set to null - do not handle at all and do not show info message\n  if (sourceDir === null) {\n    return null\n  }\n  else {\n    return await configurator.configure()\n  }\n}\n\nasync function computeEntryFile(srcDir: string, projectDir: string): Promise<string | null> {\n  const candidates: Array<string> = []\n  for (const ext of [\"ts\", \"js\", \"tsx\"]) {\n    for (const name of [\"index\", \"main\", \"app\"]) {\n      candidates.push(`${name}.${ext}`)\n    }\n  }\n\n  const file = await getFirstExistingFile(candidates, srcDir)\n  if (file == null) {\n    throw new Error(`Cannot find entry file ${path.relative(projectDir, path.join(srcDir, \"index.ts\"))} (or main.ts, or app.ts, or index.js, or main.js, or app.js)`)\n  }\n  return file\n}\n\nasync function getInstalledElectronVersion(projectDir: string) {\n  for (const name of [\"electron\", \"electron-prebuilt\", \"electron-prebuilt-compile\"]) {\n    try {\n      return (await readJson(path.join(projectDir, \"node_modules\", name, \"package.json\"))).version\n    }\n    catch (e) {\n      if (e.code !== \"ENOENT\") {\n        throw e\n      }\n    }\n  }\n}\n\nexport interface GetMatchingDevDependenciesOptions {\n  /**\n   * The list of prefixes to include, e.g. `[\"babel-preset-\"]`.\n   */\n  includes?: Array<string>\n  /**\n   * The list of names to exclude.\n   */\n  excludes?: Array<string>\n}\n"],"sourceRoot":""}
